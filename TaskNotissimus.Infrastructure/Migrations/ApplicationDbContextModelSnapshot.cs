// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaskNotissimus.Infrastructure.Persistence;

#nullable disable

namespace TaskNotissimus.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TaskNotissimus.Domain.CategoryId", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Text")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CategoryId");
                });

            modelBuilder.Entity("TaskNotissimus.Domain.DateTour", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("OfferId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Value")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OfferId");

                    b.ToTable("DateTour");
                });

            modelBuilder.Entity("TaskNotissimus.Domain.Hall", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Plan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Hall");
                });

            modelBuilder.Entity("TaskNotissimus.Domain.Offer", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Artist")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Available")
                        .HasColumnType("bit");

                    b.Property<int?>("Bid")
                        .HasColumnType("int");

                    b.Property<string>("Binding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CategoryIdId")
                        .HasColumnType("int");

                    b.Property<int?>("Cbid")
                        .HasColumnType("int");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryOfOrigin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrencyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Days")
                        .HasColumnType("int");

                    b.Property<bool?>("Delivery")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Director")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Downloadable")
                        .HasColumnType("bit");

                    b.Property<string>("Format")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HallId")
                        .HasColumnType("int");

                    b.Property<string>("HallPart")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HotelStars")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISBN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Included")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IsKids")
                        .HasColumnType("int");

                    b.Property<int?>("IsPremiere")
                        .HasColumnType("int");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LocalDeliveryCost")
                        .HasColumnType("int");

                    b.Property<bool?>("ManufacturerWarranty")
                        .HasColumnType("bit");

                    b.Property<string>("Meal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Media")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OriginalName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PageExtent")
                        .HasColumnType("int");

                    b.Property<int?>("Part")
                        .HasColumnType("int");

                    b.Property<string>("PerformanceType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PerformedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Picture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Place")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Price")
                        .HasColumnType("int");

                    b.Property<string>("Publisher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordingLength")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Room")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Series")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Starring")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Storage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Transport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypePrefix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Volume")
                        .HasColumnType("int");

                    b.Property<string>("WorldRegion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryIdId");

                    b.HasIndex("HallId");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Offers");
                });

            modelBuilder.Entity("TaskNotissimus.Domain.DateTour", b =>
                {
                    b.HasOne("TaskNotissimus.Domain.Offer", null)
                        .WithMany("DataTour")
                        .HasForeignKey("OfferId");
                });

            modelBuilder.Entity("TaskNotissimus.Domain.Offer", b =>
                {
                    b.HasOne("TaskNotissimus.Domain.CategoryId", "CategoryId")
                        .WithMany()
                        .HasForeignKey("CategoryIdId");

                    b.HasOne("TaskNotissimus.Domain.Hall", "Hall")
                        .WithMany()
                        .HasForeignKey("HallId");

                    b.Navigation("CategoryId");

                    b.Navigation("Hall");
                });

            modelBuilder.Entity("TaskNotissimus.Domain.Offer", b =>
                {
                    b.Navigation("DataTour");
                });
#pragma warning restore 612, 618
        }
    }
}
